#!/usr/bin/env python
import numpy
import argparse

from pylearn2.utils import serial
from pylearn2.models.mlp import MLP
from scikits.audiolab import play
import matplotlib.pyplot as plt
from genretron.spectrogram import Spectrogram


def parse_args():
    parser = argparse.ArgumentParser(
        description='plays the weight matrices as audio')
    parser.add_argument('model_path')
    return parser.parse_args()


def get_weights(model):
    return model.get_weights_topo()


if __name__ == "__main__":
    from scikits.audiolab import Sndfile
    signal = Sndfile('/home/carmine/Datasets/GTZAN/hiphop/hiphop.00000.au', mode='r').read_frames(29.*22050)
    # play(signal, 22050)
    spectrogram = Spectrogram.from_waveform(signal, window_size=2048)
    play(spectrogram.to_signal(), 6707)
    # spec = Spectrogram(W[i,:,:,0], window_size=2048, nframes=4.*22050*5/85, step_size=1024, window_type='square', wins=numpy.arange(5), bins=Spectrogram.bins(1024), fft_resolution=1024)
    # args = parse_args()
    # model = serial.load(args.model_path)
    # if not isinstance(model, MLP):
    #     raise NotImplementedError(
    #         "Expected the pkl of an MPL, got {0}".format(model.type))
    # W = get_weights(model)
    # print(W.shape)
    # for i in range(W.shape[0]):
    #     spec = Spectrogram(W[i,:,:,0], window_size=2048, nframes=4.*22050*5/85, step_size=1024, window_type='square', wins=numpy.arange(5), bins=Spectrogram.bins(1024), fft_resolution=1024)
    #     signal = spec.to_signal()
    #     play(signal, 22050)
    # # W = numpy.reshape(W, (W.shape[1], W.shape[0] * W.shape[2]), order='F')
    # # fig, (ax1, ax2) = plt.subplots(nrows=2)
    # # ax1.pcolormesh(W)
    # # s = ifft(W)
    # # t = numpy.arange(s.real.shape[0])
    # # print(s.real.shape)
    # # ax2.plot(t, s.real, 'b-', t, s.imag, 'r--')
    # # play(s.real)
    # # plt.show()
