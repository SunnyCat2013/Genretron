#!/usr/bin/env python
import os
import shutil
import tarfile
import genretron.utils as utils

__authors__ = "Carmine Paolino"
__copyright__ = "Copyright 2015, Vrije Universiteit Amsterdam"
__credits__ = ["Carmine Paolino"]
__license__ = "3-clause BSD"
__email__ = "carmine@paolino.me"


gtzan_origins = [ "https://dl.dropboxusercontent.com/u/2729268/genres.tar.gz",
                  "http://home.paolino.me/datasets/gtzan/genres.tar.gz",
                  "http://opihi.cs.uvic.ca/sound/genres.tar.gz" ]
gtzan_origin = gtzan_origins[0]
gtzan_base_path = os.path.join(os.environ["PYLEARN2_DATA_PATH"], "GTZAN")


if __name__ == '__main__':
    gtzan_dest = os.path.join(gtzan_base_path, os.path.basename(gtzan_origin))

    if os.path.isdir(gtzan_base_path):
        if os.path.isfile(gtzan_dest):
            if utils.query_yes_no(
                "GTZAN dataset already downloaded in {0}. \
Do you want to download it again?".format(gtzan_dest)):
                os.remove(gtzan_dest)
                utils.urlretrieve(gtzan_origin, gtzan_dest)
        else:
            utils.urlretrieve(gtzan_origin, gtzan_dest)
    else:
        print("GTZAN base path {0} not found. Creating...".format(
            gtzan_base_path))
        os.makedirs(gtzan_base_path)
        utils.urlretrieve(gtzan_origin, gtzan_dest)

    print("Extracting audio files to {0}...".format(gtzan_base_path))
    tar = tarfile.open(gtzan_dest, 'r:gz')
    tar.extractall(gtzan_base_path)
    tar.close()

    print("Flattening directory structure...")
    genre_dir = os.path.join(gtzan_base_path, 'genres')
    for root, dirnames, filenames in os.walk(genre_dir):
        for f in filenames:
            filename = os.path.join(root, f)
            genre = os.path.basename(root)
            dest_dir = os.path.join(gtzan_base_path, genre)
            if not os.path.isdir(dest_dir):
                os.makedirs(dest_dir)
            print("Moving {0} to {1}".format(filename, dest_dir))
            try:
                shutil.move(filename, dest_dir)
            except shutil.Error as e:
                print(e)
    shutil.rmtree(genre_dir)

    print("All done.")
