!obj:pylearn2.train.Train {
    dataset: &train !obj:gtzan.GTZAN_On_Memory {
        which_set: 'train',
        window_size: 2048,
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [
                 !obj:pylearn2.models.mlp.RectifiedLinear {
                     irange: .005,
                     layer_name: 'h0',
                     dim: 50,
                 },
                 !obj:pylearn2.models.mlp.Softmax {
                     irange: .005,
                     layer_name: 'y',
                     n_classes: 10,
                 }
                ],
        input_space: !obj:pylearn2.space.Conv2DSpace {
            shape: [512, 623],
            num_channels: 1,
            axes: ['b', 0, 1, 'c'],
        },
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: 0.01,
        batch_size: 100,
        # learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
        #     init_momentum: init_momentum,
        # },
        # cost: !obj:pylearn2.costs.mlp.dropout.Dropout {
        #      input_include_probs: { 'h0' : .8 },
        #      input_scales: { 'h0' : 1. }
        # },
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:gtzan.GTZAN_On_Memory {
                            which_set: 'valid',
                            window_size: 2048,
                          },
                'test'  : !obj:gtzan.GTZAN_On_Memory {
                            which_set: 'test',
                            window_size: 2048,
                          }
            },
        # termination_criterion: !obj:pylearn2.termination_criteria.EpochCounter {
        #     max_epochs: 50
        # },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.01,
            N: 20,
        },
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl",
        },
        # !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor {
        #     start: 1,
        #     saturate: 250,
        #     final_momentum: .65
        # },
        # !obj:pylearn2.training_algorithms.sgd.LinearDecayOverEpoch {
        #     start: 1,
        #     saturate: 500,
        #     decay_factor: .01
        # }
    ],
    save_freq: 1,
}
