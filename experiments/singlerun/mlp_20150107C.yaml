# This experiment is the same as mlp_20150107A but uses a window size of 1024 samples
!obj:pylearn2.train.Train {
    dataset: &train !obj:genretron.gtzan.GTZAN_On_Memory {
        which_set: 'train',
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [
                    !obj:pylearn2.models.mlp.RectifiedLinear {
                        irange: .005,
                        layer_name: 'h0',
                        dim: 50,
                    },
                    !obj:pylearn2.models.mlp.Softmax {
                        irange: .005,
                        layer_name: 'y',
                        n_classes: 10,
                    }
                ],
        input_space: !obj:pylearn2.space.Conv2DSpace {
            shape: [513, 1247],
            num_channels: 1,
            axes: ['b', 0, 1, 'c'],
        },
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: 0.01,
        batch_size: 100,
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:genretron.gtzan.GTZAN_On_Memory {
                            which_set: 'valid',
                        },
                'test'  : !obj:genretron.gtzan.GTZAN_On_Memory {
                            which_set: 'test',
                        }
            },
        # termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
        #     channel_name: "valid_y_misclass",
        #     prop_decrease: 0.01,
        #     N: 20,
        # },
        termination_criterion: !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: 10000,
        },
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
            channel_name: 'valid_y_misclass',
            save_path: "results/${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl",
        },
    ],
    save_freq: 1,
    save_path: "results/${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
}
