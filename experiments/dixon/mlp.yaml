!obj:pylearn2.train.Train {
    dataset: &train !obj:gtzan.GTZAN_On_Memory {
        which_set: 'train',
        space: 'vector',
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [
                !obj:pylearn2.models.mlp.RectifiedLinear {
                    irange: .005,
                    layer_name: 'h0',
                    dim: 50,
                },
                !obj:pylearn2.models.mlp.Softmax {
                    irange: .005,
                    layer_name: 'y',
                    n_classes: 10,
                }
        ],
        input_space: !obj:pylearn2.space.VectorSpace {
            dim: 513,
        },
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: 0.01,
        batch_size: 62300,  # 500 examples
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:gtzan.GTZAN_On_Memory {
                            which_set: 'valid',
                            space: 'vector',
                        },
                'test'  : !obj:gtzan.GTZAN_On_Memory {
                            which_set: 'test',
                            space: 'vector',
                        }
            },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.01,
            N: 1000
        },
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl"
        },
    ],
    save_freq: 1,
}
